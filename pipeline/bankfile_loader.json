{
	"name": "bankfile_loader",
	"properties": {
		"description": "Move files from one folder to another folder",
		"activities": [
			{
				"name": "GetFileList",
				"description": "Get the list of file",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "BinaryDataSource_Folder",
						"type": "DatasetReference",
						"parameters": {
							"Container": {
								"value": "@pipeline().parameters.SourceStore_Location",
								"type": "Expression"
							},
							"Directory": {
								"value": "@pipeline().parameters.SourceStore_Directory",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "ForEachFile",
				"description": "Iterate each file and move them one by one.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FilterFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FilterFiles').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "CopyAFile",
							"description": "Copy a file from the source store to the destination store.",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "If Condition1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": false,
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									},
									"recursive": false
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings",
										"copyBehavior": "PreserveHierarchy"
									}
								},
								"enableStaging": false,
								"preserve": [
									"Attributes"
								],
								"skipErrorFile": {
									"dataInconsistency": false
								},
								"validateDataConsistency": true,
								"logSettings": {
									"enableCopyActivityLog": true,
									"copyActivityLogSettings": {
										"logLevel": "Info",
										"enableReliableLogging": false
									},
									"logLocationSettings": {
										"linkedServiceName": {
											"referenceName": "Source",
											"type": "LinkedServiceReference"
										},
										"path": "source"
									}
								},
								"dataIntegrationUnits": 0
							},
							"inputs": [
								{
									"referenceName": "BinaryDataSource_File",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@pipeline().parameters.SourceStore_Location",
											"type": "Expression"
										},
										"Directory": {
											"value": "@pipeline().parameters.SourceStore_Directory",
											"type": "Expression"
										},
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "BinaryDataDestination",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@pipeline().parameters.DestinationStore_Location",
											"type": "Expression"
										},
										"Directory": {
											"value": "@pipeline().parameters.DestinationStore_Directory",
											"type": "Expression"
										},
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "set_filemaster_id",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "GetNewFileMaster_ID",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "filemaster_id",
								"value": {
									"value": "@activity('GetNewFileMaster_ID').output.outputparameters.scrfilemaster_id",
									"type": "Expression"
								}
							}
						},
						{
							"name": "GetNewFileMaster_ID",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Get Metadata Size",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "azure_recon",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"parameters": [
											{
												"name": "scrfilename",
												"type": "String",
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "srcdirectory",
												"type": "String",
												"value": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "srcfiletype",
												"type": "String",
												"value": {
													"value": "@pipeline().parameters.FileType",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "srcsize",
												"type": "String",
												"value": {
													"value": "@activity('Get Metadata Size').output.size",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "scrfilemaster_id",
												"type": "Int32",
												"value": null,
												"direction": "Output"
											}
										],
										"type": "Query",
										"text": "EXEC stage.p_insert_Stage_FileMaster \n@filename = @scrfilename,\n@diretory = @srcdirectory,\n@filetype  = @srcfiletype,\n@size = @srcsize,\n@filemaster_id = @scrfilemaster_id OUTPUT -- int\n"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Delete1",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "CopyAFile",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "BinaryDataSource_File",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@pipeline().parameters.SourceStore_Location",
											"type": "Expression"
										},
										"Directory": {
											"value": "@pipeline().parameters.SourceStore_Directory",
											"type": "Expression"
										},
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Get Metadata Size",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "input_FixedLength4000",
									"type": "DatasetReference",
									"parameters": {
										"p_filemaster_id": 0,
										"p_container": {
											"value": "@pipeline().parameters.SourceStore_Location",
											"type": "Expression"
										},
										"p_directory": {
											"value": "@pipeline().parameters.SourceStore_Directory",
											"type": "Expression"
										},
										"p_filename": {
											"value": "@item().Name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"size"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "set_filemaster_id",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(activity('Get Metadata Size').output.size , 0)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "CopyFile_to_Azure",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"additionalColumns": [
													{
														"name": "filemaster_id",
														"value": {
															"value": "@variables('filemaster_id')",
															"type": "Expression"
														}
													},
													{
														"name": "LoadID",
														"value": {
															"value": "@pipeline().RunId",
															"type": "Expression"
														}
													},
													{
														"name": "SourceFile",
														"value": {
															"value": "@item().name",
															"type": "Expression"
														}
													}
												],
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": false,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "AzureSqlSink",
												"writeBehavior": "insert",
												"sqlWriterUseTableLock": false
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"mappings": [
													{
														"source": {
															"name": "filemaster_id",
															"type": "String"
														},
														"sink": {
															"name": "raw_filemaster_id",
															"type": "Int64",
															"physicalType": "bigint"
														}
													},
													{
														"source": {
															"type": "String",
															"physicalType": "String",
															"ordinal": 1
														},
														"sink": {
															"name": "LineText",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "SourceFile",
															"type": "String"
														},
														"sink": {
															"name": "SourceFile",
															"type": "String",
															"physicalType": "varchar"
														}
													}
												],
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "input_FixedLength4000",
												"type": "DatasetReference",
												"parameters": {
													"p_filemaster_id": {
														"value": "@variables('filemaster_id')",
														"type": "Expression"
													},
													"p_container": {
														"value": "@pipeline().parameters.SourceStore_Location",
														"type": "Expression"
													},
													"p_directory": {
														"value": "@pipeline().parameters.SourceStore_Directory",
														"type": "Expression"
													},
													"p_filename": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "stage_FixedFileLines",
												"type": "DatasetReference"
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "FilterFiles",
				"description": "Only files will be selected, the source-folders will not be selected.",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "GetFileList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFileList').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().type, 'File')",
						"type": "Expression"
					}
				}
			}
		],
		"concurrency": 1,
		"parameters": {
			"SourceStore_Location": {
				"type": "string",
				"defaultValue": "source"
			},
			"SourceStore_Directory": {
				"type": "string",
				"defaultValue": "testbankfiles"
			},
			"DestinationStore_Location": {
				"type": "string",
				"defaultValue": "source"
			},
			"DestinationStore_Directory": {
				"type": "string",
				"defaultValue": "testbankfiles/archive"
			},
			"FileType": {
				"type": "string"
			}
		},
		"variables": {
			"filemaster_id": {
				"type": "Integer",
				"defaultValue": -1
			}
		},
		"annotations": []
	}
}