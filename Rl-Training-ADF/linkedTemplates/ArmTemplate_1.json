{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Rl-Training-ADF"
		},
		"trigger1_properties_pipeline_parameters_SourceStore_Location": {
			"type": "string",
			"defaultValue": "source"
		},
		"trigger1_properties_pipeline_parameters_SourceStore_Directory": {
			"type": "string",
			"defaultValue": "testbankfiles"
		},
		"trigger1_properties_pipeline_parameters_DestinationStore_Location": {
			"type": "string",
			"defaultValue": "source"
		},
		"trigger1_properties_pipeline_parameters_DestinationStore_Directory": {
			"type": "string",
			"defaultValue": "testbankfiles/archive"
		},
		"trigger1_properties_pipeline_parameters_FileType": {
			"type": "string",
			"defaultValue": "PAY"
		},
		"triggerANICO2_properties_pipeline_parameters_SourceStore_Location": {
			"type": "string",
			"defaultValue": "source"
		},
		"triggerANICO2_properties_pipeline_parameters_SourceStore_Directory": {
			"type": "string",
			"defaultValue": "ANICO"
		},
		"triggerANICO2_properties_pipeline_parameters_DestinationStore_Location": {
			"type": "string",
			"defaultValue": "source"
		},
		"triggerANICO2_properties_pipeline_parameters_DestinationStore_Directory": {
			"type": "string",
			"defaultValue": "ANICO"
		},
		"triggerANICO2_properties_pipeline_parameters_FileType": {
			"type": "string",
			"defaultValue": "BILL"
		},
		"triggerAflac_properties_pipeline_parameters_SourceStore_Location": {
			"type": "string",
			"defaultValue": "source"
		},
		"triggerAflac_properties_pipeline_parameters_SourceStore_Directory": {
			"type": "string",
			"defaultValue": "Aflac"
		},
		"triggerAflac_properties_pipeline_parameters_DestinationStore_Location": {
			"type": "string",
			"defaultValue": "source"
		},
		"triggerAflac_properties_pipeline_parameters_DestinationStore_Directory": {
			"type": "string",
			"defaultValue": "Aflac/archive"
		},
		"triggerAflac_properties_pipeline_parameters_FileType": {
			"type": "string",
			"defaultValue": "BILL"
		},
		"triggerAllstate2_properties_pipeline_parameters_SourceStore_Location": {
			"type": "string",
			"defaultValue": "source"
		},
		"triggerAllstate2_properties_pipeline_parameters_SourceStore_Directory": {
			"type": "string",
			"defaultValue": "Allstate"
		},
		"triggerAllstate2_properties_pipeline_parameters_DestinationStore_Location": {
			"type": "string",
			"defaultValue": "source"
		},
		"triggerAllstate2_properties_pipeline_parameters_DestinationStore_Directory": {
			"type": "string",
			"defaultValue": "Allstate/archive"
		},
		"triggerAllstate2_properties_pipeline_parameters_FileType": {
			"type": "string",
			"defaultValue": "BILL"
		},
		"triggerTransam_properties_pipeline_parameters_SourceStore_Location": {
			"type": "string",
			"defaultValue": "source"
		},
		"triggerTransam_properties_pipeline_parameters_SourceStore_Directory": {
			"type": "string",
			"defaultValue": "Transam"
		},
		"triggerTransam_properties_pipeline_parameters_DestinationStore_Location": {
			"type": "string",
			"defaultValue": "source"
		},
		"triggerTransam_properties_pipeline_parameters_DestinationStore_Directory": {
			"type": "string",
			"defaultValue": "Transam/archive"
		},
		"triggerTransam_properties_pipeline_parameters_FileType": {
			"type": "string",
			"defaultValue": "BILL"
		},
		"triggerUnum_properties_pipeline_parameters_SourceStore_Location": {
			"type": "string",
			"defaultValue": "source"
		},
		"triggerUnum_properties_pipeline_parameters_SourceStore_Directory": {
			"type": "string",
			"defaultValue": "Unum"
		},
		"triggerUnum_properties_pipeline_parameters_DestinationStore_Location": {
			"type": "string",
			"defaultValue": "source"
		},
		"triggerUnum_properties_pipeline_parameters_DestinationStore_Directory": {
			"type": "string",
			"defaultValue": "Unum/archive"
		},
		"triggerUnum_properties_pipeline_parameters_FileType": {
			"type": "string",
			"defaultValue": "BILL"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/df_parse_bank_nacha_file')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "inputBankFile",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "stage_blob_bankfile",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     p_filemaster_id as integer (0),",
						"     p_container as string,",
						"     p_directory as string,",
						"     p_filename as string",
						"}",
						"source(output(",
						"          Column_1 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(fmid = $p_filemaster_id,",
						"          RecordTypeCode = substring(Column_1,1,1),",
						"          TransactionCode = substring(Column_1,2,2),",
						"          ReceivingDFIIdentification = ltrim(substring(Column_1, 4, 8)),",
						"          CheckDigit = ltrim(substring(Column_1, 12, 1)),",
						"          DFIAccountNumber = ltrim(substring(Column_1, 13, 17)),",
						"          Amount = ltrim(substring(Column_1, 30, 10)),",
						"          IdentificationNumber = ltrim(substring(Column_1, 40, 15)),",
						"          Name = ltrim(substring(Column_1, 55, 22)),",
						"          DiscretionaryDataPaymentCode = ltrim(substring(Column_1, 77, 2)),",
						"          AddendaRecordIndicator = ltrim(substring(Column_1, 79, 1)),",
						"          TraceNumber = ltrim(substring(Column_1, 80, 15)),",
						"          company_date = iif(left(Column_1,1)==\"5\", ltrim(substring(Column_1,64,6)),\"\"),",
						"          effective_date = iif(left(Column_1,1)==\"5\", ltrim(substring(Column_1,70,6)),\"\")) ~> derivedColumn1",
						"filter1 select(mapColumn(",
						"          Column_1,",
						"          fmid,",
						"          RecordTypeCode,",
						"          TransactionCode,",
						"          ReceivingDFIIdentification,",
						"          CheckDigit,",
						"          DFIAccountNumber,",
						"          Amount,",
						"          IdentificationNumber,",
						"          Name,",
						"          DiscretionaryDataPaymentCode,",
						"          AddendaRecordIndicator,",
						"          TraceNumber,",
						"          company_date,",
						"          effective_date",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"derivedColumn1 filter(RecordTypeCode == \"1\" || RecordTypeCode == \"5\" || RecordTypeCode == \"6\") ~> filter1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as long,",
						"          raw_filemaster_id as long,",
						"          datarow as string,",
						"          Record_Type_Code as string,",
						"          Transaction_Code as string,",
						"          Receiving_DFI_Identification as string,",
						"          Check_Digit as string,",
						"          DFI_Account_Number as string,",
						"          Amount as string,",
						"          Identification_Number as string,",
						"          Name as string,",
						"          Discretionary_Data_Payment_Code as string,",
						"          Addenda_Record_Indicator as string,",
						"          Trace_Number as string,",
						"          Company_Descriptive_Date as string,",
						"          Effective_Date as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          raw_filemaster_id = fmid,",
						"          datarow = Column_1,",
						"          Record_Type_Code = RecordTypeCode,",
						"          Transaction_Code = TransactionCode,",
						"          Receiving_DFI_Identification = ReceivingDFIIdentification,",
						"          Check_Digit = CheckDigit,",
						"          DFI_Account_Number = DFIAccountNumber,",
						"          Amount,",
						"          Identification_Number = IdentificationNumber,",
						"          Name,",
						"          Discretionary_Data_Payment_Code = DiscretionaryDataPaymentCode,",
						"          Addenda_Record_Indicator = AddendaRecordIndicator,",
						"          Trace_Number = TraceNumber,",
						"          Company_Descriptive_Date = company_date,",
						"          Effective_Date = effective_date",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "fixed_file_loader",
						"type": "PipelineReference"
					},
					"parameters": {
						"SourceStore_Location": "[parameters('trigger1_properties_pipeline_parameters_SourceStore_Location')]",
						"SourceStore_Directory": "[parameters('trigger1_properties_pipeline_parameters_SourceStore_Directory')]",
						"DestinationStore_Location": "[parameters('trigger1_properties_pipeline_parameters_DestinationStore_Location')]",
						"DestinationStore_Directory": "[parameters('trigger1_properties_pipeline_parameters_DestinationStore_Directory')]",
						"FileType": "[parameters('trigger1_properties_pipeline_parameters_FileType')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2025-09-22T05:55:00Z",
					"endTime": "2025-09-23T05:55:00Z",
					"delay": "00:00:30",
					"maxConcurrency": 1,
					"retryPolicy": {
						"count": 3,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerANICO2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "fixed_file_loader",
						"type": "PipelineReference"
					},
					"parameters": {
						"SourceStore_Location": "[parameters('triggerANICO2_properties_pipeline_parameters_SourceStore_Location')]",
						"SourceStore_Directory": "[parameters('triggerANICO2_properties_pipeline_parameters_SourceStore_Directory')]",
						"DestinationStore_Location": "[parameters('triggerANICO2_properties_pipeline_parameters_DestinationStore_Location')]",
						"DestinationStore_Directory": "[parameters('triggerANICO2_properties_pipeline_parameters_DestinationStore_Directory')]",
						"FileType": "[parameters('triggerANICO2_properties_pipeline_parameters_FileType')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2025-09-23T02:44:00Z",
					"endTime": "2025-09-24T02:44:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"count": 2,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerAflac')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "fixed_file_loader",
						"type": "PipelineReference"
					},
					"parameters": {
						"SourceStore_Location": "[parameters('triggerAflac_properties_pipeline_parameters_SourceStore_Location')]",
						"SourceStore_Directory": "[parameters('triggerAflac_properties_pipeline_parameters_SourceStore_Directory')]",
						"DestinationStore_Location": "[parameters('triggerAflac_properties_pipeline_parameters_DestinationStore_Location')]",
						"DestinationStore_Directory": "[parameters('triggerAflac_properties_pipeline_parameters_DestinationStore_Directory')]",
						"FileType": "[parameters('triggerAflac_properties_pipeline_parameters_FileType')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2025-09-23T01:55:00Z",
					"endTime": "2025-09-25T01:55:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"count": 2,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerAllstate2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "fixed_file_loader",
						"type": "PipelineReference"
					},
					"parameters": {
						"SourceStore_Location": "[parameters('triggerAllstate2_properties_pipeline_parameters_SourceStore_Location')]",
						"SourceStore_Directory": "[parameters('triggerAllstate2_properties_pipeline_parameters_SourceStore_Directory')]",
						"DestinationStore_Location": "[parameters('triggerAllstate2_properties_pipeline_parameters_DestinationStore_Location')]",
						"DestinationStore_Directory": "[parameters('triggerAllstate2_properties_pipeline_parameters_DestinationStore_Directory')]",
						"FileType": "[parameters('triggerAllstate2_properties_pipeline_parameters_FileType')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2025-09-23T02:43:00Z",
					"endTime": "2025-09-24T02:43:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"count": 2,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerTransam')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "fixed_file_loader",
						"type": "PipelineReference"
					},
					"parameters": {
						"SourceStore_Location": "[parameters('triggerTransam_properties_pipeline_parameters_SourceStore_Location')]",
						"SourceStore_Directory": "[parameters('triggerTransam_properties_pipeline_parameters_SourceStore_Directory')]",
						"DestinationStore_Location": "[parameters('triggerTransam_properties_pipeline_parameters_DestinationStore_Location')]",
						"DestinationStore_Directory": "[parameters('triggerTransam_properties_pipeline_parameters_DestinationStore_Directory')]",
						"FileType": "[parameters('triggerTransam_properties_pipeline_parameters_FileType')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2025-09-23T02:37:00Z",
					"endTime": "2025-09-24T02:37:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerUnum')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "fixed_file_loader",
						"type": "PipelineReference"
					},
					"parameters": {
						"SourceStore_Location": "[parameters('triggerUnum_properties_pipeline_parameters_SourceStore_Location')]",
						"SourceStore_Directory": "[parameters('triggerUnum_properties_pipeline_parameters_SourceStore_Directory')]",
						"DestinationStore_Location": "[parameters('triggerUnum_properties_pipeline_parameters_DestinationStore_Location')]",
						"DestinationStore_Directory": "[parameters('triggerUnum_properties_pipeline_parameters_DestinationStore_Directory')]",
						"FileType": "[parameters('triggerUnum_properties_pipeline_parameters_FileType')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2025-09-23T02:39:00Z",
					"endTime": "2025-09-24T02:39:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"count": 2,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		}
	]
}