{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "inputBankFile",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "stage_blob_bankfile",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     p_filemaster_id as integer (0),",
				"     p_container as string,",
				"     p_directory as string,",
				"     p_filename as string",
				"}",
				"source(output(",
				"          Column_1 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(fmid = $p_filemaster_id,",
				"          RecordTypeCode = substring(Column_1,1,1),",
				"          TransactionCode = substring(Column_1,2,2)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as long,",
				"          raw_filemaster_id as long,",
				"          datarow as string,",
				"          Record_Type_Code as string,",
				"          Transaction_Code as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          raw_filemaster_id = fmid,",
				"          datarow = Column_1,",
				"          Record_Type_Code = RecordTypeCode,",
				"          Transaction_Code = TransactionCode",
				"     )) ~> sink1"
			]
		}
	}
}